/*
SPDX-License-Identifier: Apache-2.0

Copyright Contributors to the Submariner project.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1

import (
	submarineriov1 "github.com/submariner-io/submariner/pkg/apis/submariner.io/v1"
	labels "k8s.io/apimachinery/pkg/labels"
	listers "k8s.io/client-go/listers"
	cache "k8s.io/client-go/tools/cache"
)

// GatewayRouteLister helps list GatewayRoutes.
// All objects returned here must be treated as read-only.
type GatewayRouteLister interface {
	// List lists all GatewayRoutes in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*submarineriov1.GatewayRoute, err error)
	// GatewayRoutes returns an object that can list and get GatewayRoutes.
	GatewayRoutes(namespace string) GatewayRouteNamespaceLister
	GatewayRouteListerExpansion
}

// gatewayRouteLister implements the GatewayRouteLister interface.
type gatewayRouteLister struct {
	listers.ResourceIndexer[*submarineriov1.GatewayRoute]
}

// NewGatewayRouteLister returns a new GatewayRouteLister.
func NewGatewayRouteLister(indexer cache.Indexer) GatewayRouteLister {
	return &gatewayRouteLister{listers.New[*submarineriov1.GatewayRoute](indexer, submarineriov1.Resource("gatewayroute"))}
}

// GatewayRoutes returns an object that can list and get GatewayRoutes.
func (s *gatewayRouteLister) GatewayRoutes(namespace string) GatewayRouteNamespaceLister {
	return gatewayRouteNamespaceLister{listers.NewNamespaced[*submarineriov1.GatewayRoute](s.ResourceIndexer, namespace)}
}

// GatewayRouteNamespaceLister helps list and get GatewayRoutes.
// All objects returned here must be treated as read-only.
type GatewayRouteNamespaceLister interface {
	// List lists all GatewayRoutes in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*submarineriov1.GatewayRoute, err error)
	// Get retrieves the GatewayRoute from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*submarineriov1.GatewayRoute, error)
	GatewayRouteNamespaceListerExpansion
}

// gatewayRouteNamespaceLister implements the GatewayRouteNamespaceLister
// interface.
type gatewayRouteNamespaceLister struct {
	listers.ResourceIndexer[*submarineriov1.GatewayRoute]
}
